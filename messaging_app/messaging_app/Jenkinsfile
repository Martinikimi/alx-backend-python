pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'damaris70/messaging-app'
    }

    stages {
        stage('Clone Repository') {
            steps {
                echo 'Cloning repository using credentials...'
                git url: 'https://github.com/Dama5323/alx-backend-python.git', branch: 'main', credentialsId: 'github-creds'
                sh 'git branch'
            }
        }

        stage('Install Python and Dependencies') {
            steps {
                echo 'Installing Python and dependencies...'
                sh '''
                    apt-get update
                    apt-get install -y python3 python3-pip python3-venv
                    pip3 install -r messaging_app/requirements.txt
                '''
            }
        }

        stage('Run Tests') {
            steps {
                echo 'Running tests with pytest...'
                sh 'pytest messaging_app/tests --junitxml=messaging_app/test-report.xml'
            }
        }

        stage('Publish Test Report') {
            steps {
                echo 'Publishing test results...'
                junit 'messaging_app/test-report.xml'
            }
        }

        stage('Build Docker Image') {
            steps {
                echo 'Building Docker image from messaging_app directory...'
                sh 'docker build -t $DOCKER_IMAGE messaging_app/'
            }
        }

        stage('Push Docker Image') {
            steps {
                echo 'Logging in to Docker Hub and pushing image...'
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker push $DOCKER_IMAGE
                    '''
                }
            }
        }
    }
}
